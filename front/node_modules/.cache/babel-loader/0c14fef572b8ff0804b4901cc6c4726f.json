{"remainingRequest":"/work/webpj/front/node_modules/babel-loader/lib/index.js!/work/webpj/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/work/webpj/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/work/webpj/front/src/views/List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/work/webpj/front/src/views/List.vue","mtime":1585582185032},{"path":"/work/webpj/front/node_modules/cache-loader/dist/cjs.js","mtime":1585582181108},{"path":"/work/webpj/front/node_modules/babel-loader/lib/index.js","mtime":1585582181044},{"path":"/work/webpj/front/node_modules/cache-loader/dist/cjs.js","mtime":1585582181108},{"path":"/work/webpj/front/node_modules/vue-loader/lib/index.js","mtime":1585582184324}],"contextDependencies":[],"result":["import _defineProperty from \"/work/webpj/front/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Chat from \"../../node_modules/basic-vue-chat/src/components/basic-vue-chat/BasicVueChat.vue\";\nexport default _defineProperty({\n  components: {\n    Chat: Chat\n  },\n  data: function data() {\n    return {\n      menu: null,\n      dialog: null,\n      showMenu: false,\n      sub: [{\n        title: '대화하기'\n      }],\n      cur: '',\n      dial: false\n    };\n  },\n  mounted: function mounted() {\n    this.$store.commit('addNewMsg');\n  },\n  methods: {\n    setThis: function setThis(idx) {\n      this.cur = this.$store.getters.getOthers[idx].position;\n      console.log('List.vue ::: new others :::', this.$store.getters.getOthers);\n    },\n    openDial: function openDial() {\n      this.$store.state.bus.$emit('openDial');\n    },\n    subCall: function subCall(idx) {\n      switch (idx) {\n        case 0:\n          this.conversation();\n          break;\n      }\n    },\n    conversation: function conversation() {\n      console.log('call conversation');\n      this.$store.commit('addRoom', this.cur);\n    }\n  }\n}, \"mounted\", function mounted() {});",{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA,OAAA,IAAA;AACA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA;AADA,GAFA;AAKA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,MAAA,EAAA,IAFA;AAGA,MAAA,QAAA,EAAA,KAHA;AAIA,MAAA,GAAA,EAAA,CACA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA,CAJA;AAOA,MAAA,GAAA,EAAA,EAPA;AAQA,MAAA,IAAA,EAAA;AARA,KAAA;AAUA,GAhBA;AAiBA,EAAA,OAjBA,qBAiBA;AACA,SAAA,MAAA,CAAA,MAAA,CAAA,WAAA;AACA,GAnBA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,OAAA,EAAA,iBAAA,GAAA,EAAA;AACA,WAAA,GAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,GAAA,EAAA,QAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,6BAAA,EAAA,KAAA,MAAA,CAAA,OAAA,CAAA,SAAA;AACA,KAJA;AAKA,IAAA,QALA,sBAKA;AACA,WAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,KAAA,CAAA,UAAA;AACA,KAPA;AAQA,IAAA,OARA,mBAQA,GARA,EAQA;AACA,cAAA,GAAA;AACA,aAAA,CAAA;AACA,eAAA,YAAA;AACA;AAHA;AAKA,KAdA;AAeA,IAAA,YAfA,0BAeA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,mBAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,SAAA,EAAA,KAAA,GAAA;AACA;AAlBA;AApBA,iCAwCA,CACA,CAzCA","sourcesContent":["<template>\n  <v-row\n    class=\"d-flex\"\n    justify=\"center\"\n  >\n    <v-menu\n      v-model=\"showMenu\"\n      absolute\n      offset-y\n    >\n      <template #activator=\"{ on : menu }\">\n        <v-card\n    class=\"mx-auto\"\n  >\n    <v-toolbar\n      color=\"deep-purple accent-4\"\n      dark\n    >\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n         <v-toolbar-title>인원 보고</v-toolbar-title>\n\n      <div class=\"flex-grow-1\"></div>\n\n    </v-toolbar>\n\n    <v-list subheader\n        style=\"max-height: 450px\" \n        class=\"overflow-y-auto\" \n    >\n      <v-subheader>나</v-subheader>\n\n      <v-list-item>\n        <v-list-item-avatar>\n          <v-img :src=\"$store.state.user.image\"></v-img>\n        </v-list-item-avatar>\n\n        <v-list-item-content>\n          <v-list-item-title v-text=\"$store.state.user.position\"></v-list-item-title>\n        </v-list-item-content>\n              <v-list-item-icon>\n                    <v-icon :color=\"$store.state.user.active ? 'deep-purple accent-4' : 'grey'\">work</v-icon>\n                  <v-icon :color=\"$store.state.user.active ? 'deep-purple accent-4' : 'grey'\">notification_important</v-icon>\n                  <v-icon :color=\"$store.state.user.active ? 'deep-purple accent-4' : 'grey'\">chat_bubble</v-icon>\n                </v-list-item-icon>\n      </v-list-item>\n      <v-divider></v-divider>\n\n        <div v-for=\"(div) in $store.state.user.company_division\">\n          <v-subheader>{{div}}</v-subheader>\n          <div\n            v-for=\"(other, idx) in $store.state.others\"\n          >\n            <div v-if=\"other.position != $store.state.user.position\">\n              <v-list-item\n                v-if=\"other.division === div\"\n                @click=\"setThis(idx)\"\n                v-on=\"menu\"\n              >\n                  <v-list-item-avatar>\n                    <v-img :src=\"other.image\"></v-img>\n                  </v-list-item-avatar>\n\n                  <v-list-item-content>\n                    <v-list-item-title v-text=\"other.position\"></v-list-item-title>\n                  </v-list-item-content>\n\n                  <v-list-item-icon>\n                    <v-icon :color=\"$store.state.user.active ? 'deep-purple accent-4' : 'grey'\">work</v-icon>\n                  <v-icon :color=\"$store.state.user.active ? 'deep-purple accent-4' : 'grey'\">notification_important</v-icon>\n                  <v-icon :color=\"$store.state.user.active ? 'deep-purple accent-4' : 'grey'\">chat_bubble</v-icon>\n                </v-list-item-icon>\n            </v-list-item>\n          </div>\n        </div>\n        <v-divider></v-divider>\n      </div>\n    </v-list>\n  </v-card>    \n      </template>\n\n      <v-list>\n        <v-dialog v-model=\"dialog\" scrollable max-width=\"300px\">\n        <template #activator=\"{ on: dialog }\">\n          <v-list-item\n            v-for=\"(item, idx) in sub\"\n            :key=\"idx\"\n            @click=\"subCall(idx)\"\n          >\n              <v-list-item-title v-on=\"dialog\" @click=\"openDial\">{{ item.title }}</v-list-item-title>\n          </v-list-item>\n        </template>\n      <v-card>\n        <Chat :title=\"cur\"/>\n      </v-card>\n      </v-dialog>\n      </v-list>\n    </v-menu>\n\n  </v-row>\n\n</template>\n\n<script>\n  import Chat from '../../node_modules/basic-vue-chat/src/components/basic-vue-chat/BasicVueChat.vue'\n  export default {\n    \n    components: {\n      Chat,\n    },\n    data: () => {\n      return {\n        menu: null,\n        dialog: null,\n        showMenu: false,\n        sub: [\n          { title: '대화하기' },\n        ],\n        cur: '',\n        dial: false\n      }\n    },\n    mounted() {\n      this.$store.commit('addNewMsg')\n    },\n    methods: {\n      setThis:function(idx){\n        this.cur = this.$store.getters.getOthers[idx].position\n      console.log('List.vue ::: new others :::', this.$store.getters.getOthers)\n      },\n      openDial(){\n        this.$store.state.bus.$emit('openDial')\n      },\n      subCall(idx){\n        switch(idx){\n          case 0:\n            this.conversation()\n            break\n        }\n      },\n      conversation(){\n        console.log('call conversation')\n        this.$store.commit('addRoom', this.cur)\n      },\n    },\n    mounted(){\n    }\n  }\n</script>"],"sourceRoot":"src/views"}]}