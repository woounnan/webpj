{"remainingRequest":"/work/webpj/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/work/webpj/front/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/work/webpj/front/src/views/Login.vue","mtime":1569126857667},{"path":"/work/webpj/front/node_modules/cache-loader/dist/cjs.js","mtime":1567249389119},{"path":"/work/webpj/front/node_modules/babel-loader/lib/index.js","mtime":1567249384720},{"path":"/work/webpj/front/node_modules/cache-loader/dist/cjs.js","mtime":1567249389119},{"path":"/work/webpj/front/node_modules/vue-loader/lib/index.js","mtime":1567249389844}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import Vue from 'vue'\n  import Register from './enroll/Register.vue'\n  import axios from 'axios'\n  export default {\n    mounted() {\n      console.log('mounted!')\n      console.log('state : '+ this.wd.state)\n    },\n    data () {\n      return {\n          up : true,\n        form: {\n          id: '',\n          pw: ''\n        },\n        wd: {\n          msg: '',\n          state: false,\n          type: ''\n        }/*,\n        ps:{\n          bus : new Vue()\n        }*/\n      }\n    },\n    methods: {\n      reg(){\n        console.log('call reg function');\n        //location.href = '/reg' //normal move\n        //this.ps.bus.$on('exit', (code) => {\n          this.$store.state.bus.$on('exit', (code) => {\n          console.log('code:' + code)\n          if(code == 1){\n            this.wd.type = 'success'\n            this.wd.state = true\n            this.wd.msg = '등록 성공'\n        }else{\n          this.wd.type = 'error'\n          this.wd.state = true\n          this.wd.msg = '등록 실패'\n        }\n        })\n        this.$modal.show(Register,\n          {\n            //bus : this.ps.bus,\n            modal : this.$modal\n          },\n          {\n            name: 'dynamic-modal',\n            width: '100%',\n            height: '100%',\n            draggable: true\n          }, {\n          'closed' : (event) => {\n            console.log('event occured of close');\n          }}\n        )\n      },\n      check(){\n        var id = this.form.id\n        var pw = this.form.pw\n\n        this.login(id.split(' ').join(''), pw.split(' ').join(''))\n      },\n      login(id, pw){\n        axios.post(`http://192.168.132.129:3000/apis/login`, {id: id, pw: pw})\n          .then(r => {\n            if(r.data.code != '1'){\n              this.wd.state = true\n              this.wd.msg = '잘못된 입력'\n              this.wd.type = 'error'\n            }\n            else{\n              localStorage.setItem('tk', r.data.tk)\n              location.href='/'\n            }\n          })\n          .catch(e => console.error(e.message))\n      }\n    }\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-app id=\"inspire\">\n    <v-content>\n      <v-container\n        class=\"fill-height\"\n        fluid\n      >\n        <v-row\n          align=\"center\"\n          justify=\"center\"\n        >\n          <v-col\n            cols=\"12\"\n            sm=\"8\"\n            md=\"4\"\n          >\n            <modals-container />\n            <v-card class=\"elevation-12\">\n              <v-toolbar\n                color=\"primary\"\n                dark\n                flat\n              >\n                <v-toolbar-title>Login form</v-toolbar-title>\n                <div class=\"flex-grow-1\"></div>\n              </v-toolbar>\n              <v-card-text>\n                <v-form>\n                  <v-text-field\n                    v-model=\"form.id\"\n                    prepend-icon=\"person\"\n                    type=\"text\"\n                  ></v-text-field>\n                  <v-text-field\n                    v-model=\"form.pw\"\n                    prepend-icon=\"lock\"                    \n                    name=\"password\"\n                    type=\"password\"\n                  ></v-text-field>\n                </v-form>\n              </v-card-text>\n              <v-card-actions>\n                <div class=\"flex-grow-1\"></div>\n                <v-btn color=\"primary\" @click=\"reg\">등록</v-btn>\n                <v-btn color=\"primary\" @click=\"check\">로그인</v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-content>\n  <div>\n    <v-alert v-model=\"wd.state\" :type=\"wd.type\" dismissible >\n      {{wd.msg}}\n    </v-alert>\n  </div>\n  </v-app>\n</template>\n\n<script>\n  import Vue from 'vue'\n  import Register from './enroll/Register.vue'\n  import axios from 'axios'\n  export default {\n    mounted() {\n      console.log('mounted!')\n      console.log('state : '+ this.wd.state)\n    },\n    data () {\n      return {\n          up : true,\n        form: {\n          id: '',\n          pw: ''\n        },\n        wd: {\n          msg: '',\n          state: false,\n          type: ''\n        }/*,\n        ps:{\n          bus : new Vue()\n        }*/\n      }\n    },\n    methods: {\n      reg(){\n        console.log('call reg function');\n        //location.href = '/reg' //normal move\n        //this.ps.bus.$on('exit', (code) => {\n          this.$store.state.bus.$on('exit', (code) => {\n          console.log('code:' + code)\n          if(code == 1){\n            this.wd.type = 'success'\n            this.wd.state = true\n            this.wd.msg = '등록 성공'\n        }else{\n          this.wd.type = 'error'\n          this.wd.state = true\n          this.wd.msg = '등록 실패'\n        }\n        })\n        this.$modal.show(Register,\n          {\n            //bus : this.ps.bus,\n            modal : this.$modal\n          },\n          {\n            name: 'dynamic-modal',\n            width: '100%',\n            height: '100%',\n            draggable: true\n          }, {\n          'closed' : (event) => {\n            console.log('event occured of close');\n          }}\n        )\n      },\n      check(){\n        var id = this.form.id\n        var pw = this.form.pw\n\n        this.login(id.split(' ').join(''), pw.split(' ').join(''))\n      },\n      login(id, pw){\n        axios.post(`http://192.168.132.129:3000/apis/login`, {id: id, pw: pw})\n          .then(r => {\n            if(r.data.code != '1'){\n              this.wd.state = true\n              this.wd.msg = '잘못된 입력'\n              this.wd.type = 'error'\n            }\n            else{\n              localStorage.setItem('tk', r.data.tk)\n              location.href='/'\n            }\n          })\n          .catch(e => console.error(e.message))\n      }\n    }\n}\n</script>\n"]}]}