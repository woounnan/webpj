{"remainingRequest":"/work/webpj/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/work/webpj/front/src/views/ChatRoom.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/work/webpj/front/src/views/ChatRoom.vue","mtime":1568531153587},{"path":"/work/webpj/front/node_modules/css-loader/index.js","mtime":1567249389441},{"path":"/work/webpj/front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1567249389844},{"path":"/work/webpj/front/node_modules/postcss-loader/src/index.js","mtime":1567249389757},{"path":"/work/webpj/front/node_modules/cache-loader/dist/cjs.js","mtime":1567249389119},{"path":"/work/webpj/front/node_modules/vue-loader/lib/index.js","mtime":1567249389844}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.msg-form {\n  bottom: -28px;\n  position: absolute;\n  left: 0;\n  right: 0;\n}\n.msg-list {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 60px;\n  overflow-x: scroll;\n}\n",{"version":3,"sources":["ChatRoom.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChatRoom.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"inner-wrap\" fluid fill-height inner-wrap>\n    <Message-List :msgs=\"msgDatas\" class=\"msg-list\"></Message-List>\n    <Message-From v-on:submitMessage=\"sendMessage\" class=\"msg-form\" ></Message-From>\n  </div>\n</template>\n\n<script>\nimport { mapMutations, mapState } from 'vuex';\nimport MessageList from '@/components/Chat/MessageList.vue';\nimport MessageForm from '@/components/Chat/MessageForm.vue';\nimport Constant from '@/Constant';\n\nexport default {\n  name: 'ChatRoom',\n  data() {\n    return {\n      datas: [],\n    };\n  },\n  components: {\n    'Message-List': MessageList,\n    'Message-From': MessageForm,\n  },\n  computed: {\n    ...mapState({\n      'msgDatas': state => state.socket.msgDatas,\n    }),\n  },\n  created() {\n    const $ths = this;\n    this.$socket.on('chat', (data) => {\n      this.pushMsgData(data);\n      $ths.datas.push(data);\n    });\n  },\n  methods: {\n    ...mapMutations({\n      'pushMsgData': Constant.PUSH_MSG_DATA,\n    }),\n    sendMessage(msg) {\n      this.pushMsgData({\n        from: {\n          name: 'ë‚˜',\n        },\n        msg,\n      });\n      this.$sendMessage({\n        name: this.$route.params.username,\n        msg,\n      });\n    },\n  },\n};\n</script>\n\n<style>\n.msg-form {\n  bottom: -28px;\n  position: absolute;\n  left: 0;\n  right: 0;\n}\n.msg-list {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 60px;\n  overflow-x: scroll;\n}\n</style>"]}]}