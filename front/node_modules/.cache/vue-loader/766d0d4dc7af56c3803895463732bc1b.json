{"remainingRequest":"/work/webpj/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/work/webpj/front/node_modules/basic-vue-chat/src/components/basic-vue-chat/BasicVueChat.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/work/webpj/front/node_modules/basic-vue-chat/src/components/basic-vue-chat/BasicVueChat.vue","mtime":499162500000},{"path":"/work/webpj/front/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/work/webpj/front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/work/webpj/front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/work/webpj/front/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/work/webpj/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/work/webpj/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../../assets/scss/main.scss\";\n",{"version":3,"sources":["BasicVueChat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsIA","file":"BasicVueChat.vue","sourceRoot":"node_modules/basic-vue-chat/src/components/basic-vue-chat","sourcesContent":["<template>\n  <div\n    class=\"basic-vue-chat\"\n    @click=\"setEmojiPickerToggle(false)\">\n    <section class=\"window\">\n      <header class=\"window__header__container\">\n        <slot name=\"header\">\n          {{ title }}\n        </slot>\n      </header>\n      <section\n        id=\"window__messages__container\"\n        class=\"window__messages__container\">\n        <slot>\n          <messages-list\n            :feed=\"feed\"\n            :author-id=\"authorId\"\n            class=\"messages-list\" />\n        </slot>\n      </section>\n      <div class=\"window__input__container\">\n        <slot name=\"input-container\">\n          <input-container\n            :toggle-emoji-picker=\"toggleEmojiPicker\"\n            @newOwnMessage=\"onNewOwnMessage\"\n            @openEmojiPicker=\"onOpenEmojiPicker\"\n          />\n        </slot>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment'\nimport { scrollToBottom } from '../../helpers/scroll.js'\nimport MessagesList from './messages/MessagesList.vue'\nimport InputContainer from './input/InputContainer.vue'\n\nexport default {\n  name: 'BasicVueChat',\n  components: {\n    MessagesList,\n    InputContainer\n  },\n  props: {\n    title: {\n      type: String,\n      default: 'Team Maczan',\n      required: false\n    },\n    initialAuthorId: {\n      type: Number,\n      default: 0,\n      required: false\n    },\n    attachMock: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    initialFeed: {\n      type: Array,\n      default: function () {\n        return []\n      },\n      required: false\n    },\n    newMessage: {\n      type: Object,\n      default: function () {\n        return {}\n      },\n      required: false\n    }\n  },\n  data: function () {\n    return {\n      feed: [],\n      authorId: 0,\n      toggleEmojiPicker: false\n    }\n  },\n  watch: {\n    newMessage: function (newValue, oldValue) {\n      this.pushToFeed(newValue)\n      scrollToBottom()\n    }\n  },\n  mounted () {\n    if (this.attachMock) {\n      import('./mocks/mock-messages-list.js')\n        .then(mockData => {\n          this.feed = mockData.default.feed\n          this.setAuthorId(mockData.default.authorId)\n        })\n        .catch(error => {\n          console.error('Failed to load mock data from file. ', error)\n        })\n    } else {\n      this.feed = this.initialFeed\n      this.authorId = this.initialAuthorId\n    }\n  },\n  methods: {\n    setEmojiPickerToggle (toggle) {\n      this.toggleEmojiPicker = toggle\n    },\n    pushToFeed (element) {\n      this.feed.push(element)\n    },\n    onNewOwnMessage (message, image, imageUrl) {\n      const newOwnMessage = {\n        id: this.authorId,\n        contents: message,\n        image: image,\n        imageUrl: imageUrl,\n        date: moment().format('HH:mm:ss')\n      }\n\n      this.pushToFeed(newOwnMessage)\n\n      scrollToBottom()\n\n      this.$emit('newOwnMessage', message)\n    },\n    onOpenEmojiPicker (toggle) {\n      this.setEmojiPickerToggle(toggle)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../assets/scss/main.scss\";\n</style>\n"]}]}