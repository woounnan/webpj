{"remainingRequest":"/work/webpj/front/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/work/webpj/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/work/webpj/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/work/webpj/front/node_modules/basic-vue-chat/src/components/basic-vue-chat/input/InputContainer.vue?vue&type=template&id=e1a853ce&scoped=true&","dependencies":[{"path":"/work/webpj/front/node_modules/basic-vue-chat/src/components/basic-vue-chat/input/InputContainer.vue","mtime":1585582181076},{"path":"/work/webpj/front/node_modules/cache-loader/dist/cjs.js","mtime":1585582181108},{"path":"/work/webpj/front/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1585582184324},{"path":"/work/webpj/front/node_modules/cache-loader/dist/cjs.js","mtime":1585582181108},{"path":"/work/webpj/front/node_modules/vue-loader/lib/index.js","mtime":1585582184324}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"input__container\" },\n    [\n      _c(\"img\", {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.file,\n            expression: \"file\"\n          }\n        ],\n        staticClass: \"image--uploaded\",\n        attrs: { src: _vm.imagePreview }\n      }),\n      _vm._t(\"input-field\", [\n        _c(\"input-field\", {\n          on: { newOwnMessage: _vm.onNewOwnMessage },\n          model: {\n            value: _vm.message,\n            callback: function($$v) {\n              _vm.message = $$v\n            },\n            expression: \"message\"\n          }\n        })\n      ]),\n      _c(\n        \"div\",\n        { staticClass: \"features__container\" },\n        [\n          _c(\"div\", { staticClass: \"input-images-upload\" }, [\n            _c(\n              \"div\",\n              {\n                ref: \"image\",\n                staticClass: \"image\",\n                attrs: { id: \"image\", type: \"file\", accept: \"image/*\" },\n                on: {\n                  change: function($event) {\n                    return _vm.handleFileUpload()\n                  }\n                }\n              },\n              [\n                _c(\n                  \"label\",\n                  { attrs: { for: \"image\" } },\n                  [_c(\"font-awesome-icon\", { attrs: { icon: \"paperclip\" } })],\n                  1\n                )\n              ]\n            )\n          ]),\n          _c(\n            \"div\",\n            { staticClass: \"input-images-upload input-emoji-picker__icon\" },\n            [\n              _c(\n                \"div\",\n                { attrs: { id: \"emoji\" }, on: { click: _vm.openEmojiPicker } },\n                [\n                  _c(\n                    \"label\",\n                    { attrs: { for: \"emoji\" } },\n                    [_c(\"font-awesome-icon\", { attrs: { icon: \"smile\" } })],\n                    1\n                  )\n                ]\n              )\n            ]\n          ),\n          _c(\n            \"div\",\n            {\n              staticClass: \"input-emoji-picker__container\",\n              class: { visible: !_vm.toggleEmojiPicker }\n            },\n            [\n              _c(\"picker\", {\n                attrs: {\n                  \"show-preview\": false,\n                  \"show-skin-tones\": false,\n                  \"show-categories\": false,\n                  \"show-search\": false,\n                  native: \"\"\n                },\n                on: { select: _vm.emojiPicked }\n              })\n            ],\n            1\n          ),\n          _vm._t(\"features\"),\n          _c(\n            \"v-menu\",\n            {\n              attrs: { top: \"\", \"offset-y\": \"\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"activator\",\n                  fn: function(ref) {\n                    var menu = ref.on\n                    return [\n                      _c(\"v-icon\", _vm._g({}, menu), [_vm._v(\"control_point\")]),\n                      _vm._v(\"Â \\n      \")\n                    ]\n                  }\n                }\n              ])\n            },\n            [\n              _c(\n                \"v-btn\",\n                [\n                  _c(\n                    \"v-dialog\",\n                    {\n                      staticStyle: { width: \"100%\" },\n                      scopedSlots: _vm._u([\n                        {\n                          key: \"activator\",\n                          fn: function(ref) {\n                            var dialog = ref.on\n                            return [\n                              _c(\n                                \"v-icon\",\n                                _vm._g({ on: { click: _vm.regWork } }, dialog),\n                                [_vm._v(\"work\")]\n                              ),\n                              _c(\n                                \"v-icon\",\n                                _vm._g(\n                                  { on: { click: _vm.regNotice } },\n                                  dialog\n                                ),\n                                [_vm._v(\"notification_important\")]\n                              )\n                            ]\n                          }\n                        }\n                      ]),\n                      model: {\n                        value: _vm.dial_work,\n                        callback: function($$v) {\n                          _vm.dial_work = $$v\n                        },\n                        expression: \"dial_work\"\n                      }\n                    },\n                    [\n                      _c(\"Work\", {\n                        attrs: { sel: _vm.sel, notice: _vm.notice }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        2\n      ),\n      _vm._t(\"input-button\", [\n        _c(\"input-button\", { on: { newOwnMessage: _vm.onNewOwnMessage } })\n      ])\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}